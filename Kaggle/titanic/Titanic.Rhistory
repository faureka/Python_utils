?rnorm
data<-rnorm(200,mean = 2, sd = 1)
data
plot(data)
summary(data)
x<- rnorm(10)
print(x)
x<- rnorm(10,20,2)
print(x)
summary(x)
set.seed(1)
set.seed(20)
x<-rnorm(100)
e<- rnorm(100,0,1)
y<- 1.5 -3*x + e
plot(x,y)
q()
library('swirl')
swirl
swirl()
clear
clear()
demo()
demo(package = .packages(all.available = TRUE))
demo(package = .graphics)
demo(package = graphics)
demo(graphics)
demo(package = graphics)
demo(package = 'graphics')
demo(image)
demo(Hershey)
demo(Japanese)
demo(plotmath)
demo(package = .packages(all.available = TRUE))
demo(oauth1-twitter)
demo(package = 'httr')
demo(topic = 'oauth1-twitter')
demo(topic = 'oauth1-github')
train <- read.csv("C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/train.csv")
View(train)
str(train)
clear()
clear
prop.table(table(train$Survived))
test$Survived <- rep(0,418)
test <- read.csv("C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/test.csv")
view(test)
test
view(test)
View(test)
View(test)
test$Survived <- rep(0,418)
View(test)
submit<- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
View(submit)
write.csv(submit,file = "C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/allperish.csv",row.names=FALSE)
prop.table(table(train$Sex train$Survived))
prop.table(table(train$Sex,train$Survived))
prop.table(table(train$Sex,train$Survived),1)
test$Survived[test$Sex == 'female'] <- 1
View(test)
submit<- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
write.csv(submit,file = "C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/allperish.csv",row.names=FALSE)
summary(train$Age)
train$Child <- 0
train$Child[train$Age < 18] <- 1
View(train)
aggregate(Survived ~ Child + Sex, data = train, FUN = sum )
aggregate(Survived ~ Child + Sex, data = train, FUN = length )
aggregate(Survived ~ Child + Sex, data = train, FUN = function(x) {sum(x)/length(x)} )
train$Fare2 <- '30+'
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'
View(train)
aggregate(Survived ~ Fare2 + Pclass + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
test$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1
test$Survived[test$Sex == 'female' & test$Pclass == '3'] <- 0
library('rpart')
library(rpart)
?rpart
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
plot(fit)
text(fit,use.n = TRUE)
text(fit)
plot(fit)
text(fit)
par(mfrow = c(1,2), xpd = NA)
text(fit)
par(mfrow = c(1,2), xpd = NA)
text(fit)
plot(fit)
text(fit)
plot(fit)
text(fit)
plot(fit)
text(fit)
install.packages('rattle')
install.packages('rpart.plot')
install.packages('RColorBrewer')
fancyRpartPlot(fit)
library(rattle)
library(rpart.plot)
library(RcolorBrewer)
library(RColorBrewer)
fancyRpartPlot(fit)
Prediction <- predict(fit,test,type = "class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "myfirstdtree.csv", row.names = FALSE)
write.csv(submit, file = ""C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/myfirstdtree.csv", row.names = FALSE)
write.csv(submit, file = "C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/myfirstdtree.csv", row.names = FALSE)
rpart.control
rpart.control()
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train,method="class", control=rpart.control(minsplit=2, cp=0))
fancyRpartPlot(fit)
test$Survived <- NA
View(test)
combi <- rbind(train,test)
train <- train.drop('Child')
train <- read.csv("C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/train.csv")
View(train)
test <- read.csv("C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/test.csv")
View(test)
test$Survived <- NA
combi <- rbind(train,test)
View(combi)
combi$Title <- sapply(Combi$Name , FUN = function(x) {strsplit(x,split ='[,.]')[[1]][2] })
combi$Title <- sapply(combi$Name , FUN = function(x) {strsplit(x,split ='[,.]')[[1]][2] })
combi$Name <- as.character(combi$Name)
combi$Title <- sapply(combi$Name , FUN = function(x) {strsplit(x,split ='[,.]')[[1]][2] })
View(combi)
combi$Title <- sub(' ','',combi$Title)
table(combi$Title)
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
View(combi)
table(combi$Title)
combi$Title <- factor(combi$Title)
combi$FamilySize <- combi$SibSp + combi$Parch + 1
View(test)
View(combi)
combi$Surname <- sapply(combi$Name , FUN = function(x) {strsplit(x,split ='[,.]')[[1]][1] })
View(combi)
combi$FamilyID <- paste(as.character(combi$FamilySize), combi$Surname, sep="")
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
table(combi$FamilyID)
famIDs <- data.frame(table(combi$FamilyID))
View(famIDs)
View(famIDs)
famIDs <- famIDs[famIDs$Freq <= 2]
famIDs <- famIDs[famIDs$Freq <= 2,]
View(famIDs)
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
combi$FamilyID <- factor(combi$FamilyID)
View(combi)
table(combi$FamilyID)
train <- combi[1:891,]
test = combi[892:1309,]
View(train)
View(test)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,
data=train, method="class")
fancyRpartPlot(fit)
Prediction <- predict(fit,test,type = "class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = ""C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/betterdtree.csv", row.names = FALSE)
write.csv(submit, file = "C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/betterdtree.csv", row.names = FALSE)
prop.table(table(train$Survived))
savehistory("C:/Users/stifler/Downloads/study material/OCW/UN data Analysis/Python_utils/Kaggle/titanic/Titanic.Rhistory")
